<!--
	Common build and properties file.  This contains all
	the targets

  $RCSfile: common.xml,v $
  $Author: bouncy $
  $Date: 2005-07-06 13:02:52 $
  $Revision: 1.1 $
-->
	<!-- Project directory structure -->

	<property name="master.home" value="${basedir}" />
	<property name="master.src" value="${basedir}/src" />
	<property name="master.classes" value="${basedir}/build" />
	<property name="master.dist"  value="${basedir}/dist"/>
	<property name="master.lib"  value="${basedir}/lib"/>
	<property name="master.docroot"  value="${basedir}/docs"/>
	<property name="master.jdoc" value="${master.docroot}/"/>
	<property name="master.rootname" value="${master.jdk}-${master.shortver}" />
	<property name="master.lw-release" 
			value="${master.dist}/lcrypto-${master.rootname}" />
	<property name="master.jce-release" 
			value="${master.dist}/jce-${master.rootname}" />
			
	<!-- patternsets for the lw/jce target differences -->
	<patternset id="tar.extras" >
		<include name="*.xml" />
		<include name="*.html" />
	</patternset>

	<patternset id="lw.excludes" >
		<exclude name="**/javax/**" />
		<exclude name="**/jce/**" />
	</patternset>

	<patternset id="package.tar" >
		<include name="classes/**" />
		<include name="src/**" />
		<include name="docs/**" />
	</patternset>
	
	<target name="what" >
		<echo message="Checking environment" />
		<echo message="     OS = ${os.name}" />
		<echo message="   Home = ${user.home}" />
		<echo message="Basedir = ${master.home}" />
		<echo message="Classes = ${master.classes}" />
		<echo message="    JDK = ${master.jdk}" />
		<echo message="    LW? = ${is.lw}" />
		<echo message="   JCE? = ${is.jce}" />
		<echo message="Activate  ${user.activation.jar}" />
		<echo message="Mail JAR  ${user.mail.jar}" />
		<echo message="Mail API  ${user.mailapi.jar}" />
	</target>
	
	<!-- the init and clean targets are singular -->
	<target name="init" >
		<tstamp />
		
		<antcall target="what" />

		<mkdir dir="${master.classes}" />
		<mkdir dir="${master.dist}" />
		<mkdir dir="${master.jdoc}" /> 

	</target>

	<target name="common-clean">
		<delete dir="${master.classes}"/>
		<delete dir="${master.dist}"/>
		<delete dir="${master.jdoc}"/>
	</target>

	<!-- *** Private Targets *** -->

	<!-- package -->
	<target name="common-package" >
		<antcall target="clean" />
		<antcall target="compile" />
		<antcall target="jdoc" />
		<antcall target="dist" />
	</target>

	<target name="common-compile" depends="lw-compile, jce-compile" />
	<target name="common-jdoc" depends="lw-jdoc, jce-jdoc" />
	<target name="common-test" >
		<antcall target="lw-test" />
		<antcall target="jce-test" />
		<antcall target="asn1-test" />
	</target>

	<!-- compile -->
	<target name="lw-compile" depends="init" if="is.lw" >
		<javac srcdir="${master.src}" 
			destdir="${master.classes}" >
			<patternset refid="lw.excludes" /> 
			<classpath refid = "compile.cp" />
		</javac>
	</target>

	<target name="jce-compile" depends="init" if="is.jce" >
		<javac srcdir="${master.src}" 
			destdir="${master.classes}" >
			<classpath refid = "compile.cp" />
		</javac>
	</target>

	<!-- dist -->
	<target name="common-dist" >
		<antcall target="common-release" />
		<antcall target="common-tarball" />
		<antcall target="common-zip" />
	</target>

	<target name="common-release" depends="lw-release, jce-release" />
	<target name="common-tarball" depends="lw-tarball, jce-tarball" />
	<target name="common-zip" depends="lw-zip, jce-zip" />

	<target name="lw-release" if="is.lw">
		<mkdir dir="${master.lw-release}" />
		<copy todir="${master.lw-release}" >
			<fileset dir="${master.home}/" >
				<patternset refid="package.tar" />	
				<patternset refid="lw.excludes" /> 
				<patternset refid="tar.extras" />	
			</fileset>
		</copy>

		<jar jarfile="${master.lw-release}.jar"
			basedir="${master.lw-release}/classes" />
	</target>

	<target name="jce-release" if="is.jce">
		<mkdir dir="${master.jce-release}" />
		<copy todir="${master.jce-release}" >
			<fileset dir="${master.home}/" >
				<patternset refid="package.tar" />	
				<patternset refid="tar.extras" />	
			</fileset>
		</copy>

		<jar jarfile="${master.jce-release}.jar"
			basedir="${master.jce-release}/classes" />
	</target>

	<target name="lw-zip" if="is.lw">
		<zip zipfile="${master.lw-release}.zip" 
			basedir="${master.dist}"
			excludes="*.tar, *.gz, *.zip, *.jar" >
		</zip>
	</target>

	<target name="lw-tarball" if="is.lw" >
		<tar tarfile="${master.lw-release}.tar" 
			basedir="${master.dist}"
			excludes="*.tar, *.gz, *.zip, *.jar" >
		</tar>

		<gzip src="${master.lw-release}.tar" 
			zipfile="${master.lw-release}.tar.gz" />
	</target>

	<target name="jce-zip" if="is.jce">
		<zip zipfile="${master.jce-release}.zip" 
			basedir="${master.dist}"
			excludes="*.tar, *.gz, *.zip, *.jar" >
		</zip>
	</target>

	<target name="jce-tarball" if="is.jce" >
		<tar tarfile="${master.jce-release}.tar" 
			basedir="${master.dist}"
			excludes="*.tar, *.gz, *.zip, *.jar" >
		</tar>

		<gzip src="${master.jce-release}.tar" 
			zipfile="${master.jce-release}.tar.gz" />
	</target>

	<!-- javadoc (jdoc) -->
	<property name="bc" value="Bouncy Castle Cryptography ${master.version}" />
	<property name="windowtitle" value="${bc} API Specification" />
	<property name="doctitle" value="&lt;b&gt; ${bc} API &lt;/b&gt;" />

	<property name="lw-jdoc-packages" value="
                org.bouncycastle.asn1,
                org.bouncycastle.asn1.cmp,
                org.bouncycastle.asn1.cms,
                org.bouncycastle.asn1.cryptopro,
                org.bouncycastle.asn1.ess,
                org.bouncycastle.asn1.misc,
                org.bouncycastle.asn1.mozilla,
                org.bouncycastle.asn1.nist,
                org.bouncycastle.asn1.ocsp,
                org.bouncycastle.asn1.oiw,
                org.bouncycastle.asn1.pkcs,
                org.bouncycastle.asn1.sec,
                org.bouncycastle.asn1.smime,
                org.bouncycastle.asn1.teletrust,
                org.bouncycastle.asn1.test,
                org.bouncycastle.asn1.tsp,
                org.bouncycastle.asn1.util,
                org.bouncycastle.asn1.x509,
                org.bouncycastle.asn1.x9,
		org.bouncycastle.math.ec,
		org.bouncycastle.crypto,
		org.bouncycastle.crypto.agreement,
		org.bouncycastle.crypto.digests,
		org.bouncycastle.crypto.encodings,
		org.bouncycastle.crypto.engines,
		org.bouncycastle.crypto.generators,
		org.bouncycastle.crypto.io,
		org.bouncycastle.crypto.macs,
		org.bouncycastle.crypto.modes,
		org.bouncycastle.crypto.params,
		org.bouncycastle.crypto.signers,
		org.bouncycastle.crypto.test,
		org.bouncycastle.crypto.examples,
		org.bouncycastle.util.encoders,
		org.bouncycastle.util.test" />

	<property name="jce-jdoc-packages" value="org.bouncycastle.*, javax.*" />

	<target name="lw-jdoc" if="is.lw" >
		<javadoc packagenames="${lw-jdoc-packages}" 
			sourcepath="src"
			destdir="${master.jdoc}"
			author="true"
			version="true"
			use="false"
			windowtitle="${windowtitle}"
			doctitle="${doctitle}"
			failonerror = "yes">
			<group title="Core Packages" packages="org.bouncycastle.*" />
			<group title="Example Packages" 
				packages="org.bouncycastle.crypto.examples.*" />
		</javadoc>
	</target>

	<target name="jce-jdoc" if="is.jce" >
		<javadoc packagenames="${jce-jdoc-packages}"
			sourcepath="src"
			destdir="${master.jdoc}"
			author="true"
			version="true"
			use="false"
			windowtitle="${windowtitle}"
			doctitle="${doctitle}"
			failonerror = "yes">
			<group title="Core Packages" packages="org.bouncycastle.*" />
			<group title="Example Packages" 
				packages="org.bouncycastle.crypto.examples.*" />
		</javadoc>
	</target>

	<!-- testing -->
	<target name="lw-test" depends="compile" if="is.lw" >
		<java classname="org.bouncycastle.crypto.test.RegressionTest" 
			fork="yes" >
			<classpath refid = "compile.cp" />
		</java>
	</target>

	<target name="jce-test" depends="compile" if="is.jce" >
		<java classname="org.bouncycastle.crypto.test.RegressionTest" 
			fork="yes" >
			<classpath refid = "compile.cp" />
		</java>
	</target>
	
	<target name="asn1-test" >
		<java classname="org.bouncycastle.asn1.test.RegressionTest" 
			fork="yes" >
			<classpath refid = "compile.cp" />
		</java>
	</target>
	
	<target name="cms-test" if="is.jce" >
		<java classname="org.bouncycastle.cms.test.AllTests" 
			fork="yes" >
			<classpath refid = "compile.cp" />
		</java>
	</target>
	
	<target name="smime-test" if="is.jce" >
		<java classname="org.bouncycastle.mail.smime.test.AllTests" 
			fork="yes" >
			<classpath refid = "compile.cp" />
		</java>
	</target>
	
